<project default="compile">
  
  <!-- build.xml for 0000209, S11, CS56
       name: Scott Bishop and Leif Dreizler
       name: Joseph Huang
       edited by Eric Huang for project 01, Spring 2013  -->
  
  <property environment="env"/> <!-- load the environment variables --> 
  <property name="webRoot" value="${env.HOME}/public_html/cs56/" />
  <property name="webBaseUrl" value="http://www.cs.ucsb.edu/~${env.USER}/cs56" />
  <property name="projectName" value="edu/ucsb/cs56/projects/tutorials/hfj" /> 
  <property name="javadocDest" value="${webRoot}/${projectName}/javadoc" /> 
  <property name="javadocURL" value="${webBaseUrl}/${projectName}/javadoc" /> 
  <property name="mainClass" value="edu.ucsb.cs56.projects.tutorials.hfj.DogDrive" />  
  <property name="mainClass2" value="edu.ucsb.cs56.projects.tutorials.hfj.SongDrive" />
  <property name="mainClass3" value="edu.ucsb.cs56.projects.tutorials.hfj.LifeDrive" />
  <property name="mainClass4" value="edu.ucsb.cs56.projects.tutorials.hfj.ElectricGuitarDrive" />
  
  <target name="compile" description="compile my code">
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source">
      <classpath>
	<pathelement location="build"/>
	<pathelement location="lib/junit-4.8.2.jar"/>
      </classpath>
    </javac>
  </target>
  
  <target name="run" depends="compile" description="displays options to run driver files">
    <echo>
      To run the files, type these commands:
      ant runDog
      ant runSong
      ant runLife
      ant runElectricGuitar
    </echo>
  </target>
  
  <target name="runDog" depends="compile" description="runs DogDrive">
    <java classname="${mainClass}" classpath="build" />
  </target>
  
  <target name="runSong" depends="compile" description="runs SongDrive">
    <java classname="${mainClass2}" classpath="build" />
  </target>
  
  <target name="runLife" depends="compile" description="runs LifeDrive">
    <java classname="${mainClass3}" classpath="build" />
  </target>
  
  <target name="runElectricGuitar" depends="compile" description="runs ElectricGuitarDrive">
    <java classname="${mainClass4}" classpath="build" />
  </target>
  
  <target name="clean" description="gets rid of any unnecessary files and directories">
    <delete failonerror="false" verbose="true">
      <fileset dir="build" includes="*.class" />
    </delete>
    <delete dir="javadoc" quiet="true" />
    <delete dir="dist" quiet="true" />
    <delete dir="download" quiet="true" />                             
    <delete dir="temp" quiet="true" />    
  </target>
  
  <target name="javadoc" depends="compile">
    <delete dir="javadoc" quiet="true" />
    <javadoc  destdir="javadoc" author="true" version="true" use="true" >
      <fileset dir="src" includes="**/*.java"/>
      <classpath>
	<pathelement location="lib/junit-4.8.2.jar"/>
      </classpath>
    </javadoc>                                                                      
    <!-- delete the old javadoc -->
    <delete quiet="true" dir="${javadocDest}" />
    <!-- copy everything you just made to the javadoc destination, and then make it readable -->
    <copy todir="${javadocDest}" >
      <fileset dir="javadoc"/>
    </copy>                                                                         
    <!-- Note: this only does the chmod command on the javadoc subdirectory and its contents.  You MIGHT have to
	 MANUALLY do the chmod on the parent directories.  However, you should only need to do that once. -->                                  <chmod dir="${javadocDest}" perm="755"  type="dir" includes="**" />              <chmod dir="${javadocDest}" perm="755"  type="file" includes="**/*" />           <echo>Javadoc deployed to ${javadocURL}</echo>                                    </target>        
    
    <target name="jar" depends="compile">
      <mkdir dir="dist" />
      <jar destfile="dist/${projectName}.jar" basedir="build">           
	<manifest>
	  <attribute name="${mainClass}" value="DogDrive" />
	  <attribute name="${mainClass2}" value="SongDrive" />
	</manifest>
      </jar>
    </target>
</project>
